buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//        classpath "com.squareup.sqldelight:gradle-plugin:$sqldelight_version"
    }
}
plugins {
    id("app.cash.sqldelight") version "$sqldelight_version"
}
apply plugin: 'java'
apply plugin: 'kotlin'
apply from: 'integration-test.gradle'

repositories {
    mavenCentral()
    google()
}

dependencies {
    implementation project(includePrefix + ':mbwlib')
    implementation project(includePrefix + ':bitlib')
    implementation project(includePrefix + ':walletmodel')
    implementation project(includePrefix + ':wapi')
    implementation project(includePrefix + ':fiosdk')

    implementation "com.google.guava:guava:$rootProject.guavaVersion"
    implementation "com.fasterxml.jackson.core:jackson-core:2.9.5"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonAnnotationsVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion"
    implementation "com.google.http-client:google-http-client-jackson2:$httpClientJacksonVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "com.google.code.gson:gson:$gsonVersion"

    // SQDelight
    implementation "app.cash.sqldelight:sqlite-driver:$sqldelight_version"
    implementation "app.cash.sqldelight:primitive-adapters:$sqldelight_version"
    implementation "app.cash.sqldelight:rxjava2-extensions:$sqldelight_version"

    implementation 'org.bitcoinj:bitcoinj-core:0.14.5'

    // Ethereum
    implementation 'org.web3j:core:4.2.1-android'

    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:2.23.0"
}

sqldelight {
    databases {
        WalletDB {
            packageName = "com.mycelium.generated.wallet.database"
        }
    }
}



compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// Creates a single Jar with all dependencies
task fatJar(type: Jar) {
    archiveBaseName = project.name + '-all'
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
       exclude "META-INF/*.SF"
       exclude "META-INF/*.DSA"
       exclude "META-INF/*.RSA"
    }
    with jar
}